f_to_sup_error_rm <- function(x){
tryCatch(
expr = {
# message(f_to_sup(x))
# message("Successfully executed the log(x) call.")
return(f_to_sup(x))
},
error = function(e){
message('Caught an error!')
print(e)
# return(2)
},
warning = function(w){
# print(x)
f_to_sup(x)
# return(3)
},
finally = {
# message('All done, quitting.')
}
)
}
f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
sym[1,]
df <- data.frame(p2 = p2, Z0 = sym[1,], Z = sym[2,] )
df
melt(df, id ="p2", measure = "Z0")
plot(p2,sym[1,],type ="l")
lines(p2,sym[2,])
lines(p2,sym[2,])
df
p2
p2s <- seq(0.01,0.99,0.05)
sym <- sapply(p2s, f_to_sup_error_rm)
sym[1,]
df <- data.frame(p2 = p2, Z0 = sym[1,], Z = sym[2,] )
df
plot(p2s,sym[1,],type ="l")
lines(p2s,sym[2,])
melt_Df <- melt(df, id=1, measure=c("Z","Z0"))
ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line()
ggplot(melt_Df,aes(p2s, value, colour = variable)) + geom_point() + geom_line()
melt_Df <- melt(df, id=1, measure=c("Z","Z0"))
melt_Df
df <- data.frame(p2 = p2, Z0 = sym[1,], Z = sym[2,] )
df
melt_Df <- melt(df, id=1, measure=c("Z","Z0"))
melt_Df
df <- data.frame(p2s = p2s, Z0 = sym[1,], Z = sym[2,] )
df
melt_Df <- melt(df, id=1, measure=c("Z","Z0"))
melt_Df
ggplot(melt_Df,aes(p2s, value, colour = variable)) + geom_point() + geom_line()
# zad3
library(ggplot2)
library(reshape2)
n <- 10
mcs <- 1000
alpha <- 0.05
ps_1 <- numeric(mcs)
ps_2 <- numeric(mcs)
p2s <- seq(0.01,0.99,0.05)
p2_0 <- 0.5
for (mc in 1:mcs) {
X <- rbinom(n,1, p = 0.5)
Y <- rbinom(n, 1, p = p2_0)
data <- matrix(0, nrow = 2, ncol = 2)
for (i in 1:n) {
x<-X[i]
y<-Y[i]
if (x==0 & y==0) {
data[1,1] <- data[1,1] + 1
} else if (x==0 & y==1){
data[1,2] <- data[1,2] + 1
}
else if (x==1 & y==0){
data[2,1] <- data[2,1] + 1
} else{
data[2,2] <- data[2,2] + 1
}
}
y12 <- data[1,2]
y21 <- data[2,1]
p_data <- data/n
p11 <- p_data[1,1]
p12 <- p_data[1,2]
p21 <- p_data[2,1]
p22 <- p_data[2,2]
p_.1 <- (data[1,1]+data[2,1])/n
p_1. <- (data[1,1]+data[1,2])/n
D <- p_1. - p_.1
sig <- sqrt( ( p_1.*(1-p_1.) + p_.1*(1-p_.1) - 2*(p11*p22-p12*p21) )/n  )
z <- D/sig
p_value1 <- 2*(1 - pnorm(abs(z)))
z0  <- ( y12 - y21 ) / ( sqrt( y12 + y21 ) )
p_value2 <- 2*(1 - pnorm(abs(z0)))
ps_1[mc] <- p_value1 < 0.05
ps_2[mc] <- p_value2 < 0.05
}
print(c(sum(ps_1, na.rm = TRUE)/mcs,
sum(ps_2, na.rm = TRUE)/mcs))
#####
f_to_sup <- function(p) {
p2 <- p
for (mc in 1:mcs) {
X <- rbinom(n,1, p = 0.5)
Y <- rbinom(n, 1, p = p2)
data <- matrix(0, nrow = 2, ncol = 2)
for (i in 1:n) {
x<-X[i]
y<-Y[i]
if (x==0 & y==0) {
data[1,1] <- data[1,1] + 1
} else if (x==0 & y==1){
data[1,2] <- data[1,2] + 1
}
else if (x==1 & y==0){
data[2,1] <- data[2,1] + 1
} else{
data[2,2] <- data[2,2] + 1
}
}
y12 <- data[1,2]
y21 <- data[2,1]
p_data <- data/n
p11 <- p_data[1,1]
p12 <- p_data[1,2]
p21 <- p_data[2,1]
p22 <- p_data[2,2]
p_.1 <- (data[1,1]+data[2,1])/n
p_1. <- (data[1,1]+data[1,2])/n
D <- p_1. - p_.1
sig <- sqrt( ( p_1.*(1-p_1.) + p_.1*(1-p_.1) - 2*(p11*p22-p12*p21) )/n  )
z <- D/sig
p_value1 <- 2*(1 - pnorm(abs(z)))
z0  <- ( y12 - y21 ) / ( sqrt( y12 + y21 ) )
p_value2 <- 2*(1 - pnorm(abs(z0)))
ps_1[mc] <- p_value1 < 0.05
ps_2[mc] <- p_value2 < 0.05
}
return(c(sum(ps_1, na.rm = TRUE)/mcs,
sum(ps_2, na.rm = TRUE)/mcs))
}
f_to_sup_error_rm <- function(x){
tryCatch(
expr = {
# message(f_to_sup(x))
# message("Successfully executed the log(x) call.")
return(f_to_sup(x))
},
error = function(e){
message('Caught an error!')
print(e)
# return(2)
},
warning = function(w){
# print(x)
f_to_sup(x)
# return(3)
},
finally = {# plot(p2s,sym[1,],type ="l")
# lines(p2s,sym[2,])
# message('All done, quitting.')
}
)
}
f_to_sup_error_rm(0.11)
sym <- sapply(p2s, f_to_sup_error_rm)
sym[1,]
sym <- sapply(p2s, f_to_sup_error_rm)
sym[1,]
df <- data.frame(p2s = p2s, Z0 = sym[1,], Z = sym[2,] )
df
sym <- sapply(p2s, f_to_sup_error_rm)
df <- data.frame(p2s = p2s, Z0 = sym[1,], Z = sym[2,] )
df
1
melt_Df <- melt(df, id=1, measure=c("Z","Z0"))
melt_Df
ggplot(melt_Df,aes(p2s, value, colour = variable)) + geom_point() + geom_line()
source("~/semest_6/ADA/lista10/zad3.r", echo=TRUE)
# f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
# f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
# f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
f_to_sup_error_rm <- function(x){
tryCatch(
expr = {
# message(f_to_sup(x))
# message("Successfully executed the log(x) call.")
return(f_to_sup(x))
},
error = function(e){
# message('Caught an error!')
# print(e)
# return(2)
},
warning = function(w){
# print(x)
f_to_sup(x)
# return(3)
},
finally = {# plot(p2,sym[1,],type ="l")
# lines(p2,sym[2,])
# message('All done, quitting.')
}
)
}
# f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
# f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
# f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
sym
# f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
sym
# f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
sym
df <- data.frame(p2 = p2, Z0 = sym[1,], Z = sym[2,] )
melt_Df <- melt(df, id=1, measure=c("Z","Z0"))
melt_Df
ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line()
p2 <- seq(0.01,0.99,0.02)
# f_to_sup_error_rm(0.11)
sym <- sapply(p2, f_to_sup_error_rm)
df <- data.frame(p2 = p2, Z0 = sym[1,], Z = sym[2,] )
melt_Df <- melt(df, id=1, measure=c("Z","Z0"))
melt_Df
ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line()
ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line()+title("hi")
ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line+ ggtitle("Porównanie mocy testóœ")
ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line+ ggtitle("Porównanie mocy testóœ")
ax <- ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line+ ggtitle("Porównanie mocy testóœ")
ax <- ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line+ ggtitle("Porównanie mocy testów")
"Porównanie mocy testów"
ax <- ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line
ax + ggtitle("Plot of length \n by dose")
ax <- ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line
ax <- ggplot(melt_Df,aes(p2, value, colour = variable)) + geom_point() + geom_line()
ax + ggtitle("Plot of length \n by dose")
of length \n by dose")
ggplot(melt_Df,aes(p2, value, colour = variable)) +
geom_point() + geom_line() + ggtitle("Plot of length \n by dose")
ggplot(melt_Df,aes(p2, value, colour = variable)) +
geom_point() + geom_line() + ggtitle("Porównanie mocy testów")
P1=matrix(c(12,5,0,32,40,26,10,21,54),
nrow = 3,
dimnames = list("Badanie1" = c("Slaba", "Srednia", "Bardzo dobra"), ´
+ "Badanie2" = c("Slaba", "Srednia", "Bardzo dobra")))
P1=matrix(c(12,5,0,32,40,26,10,21,54),
nrow = 3,
dimnames = list("Badanie1" = c("Slaba", "Srednia", "Bardzo dobra"),
"Badanie2" = c("Slaba", "Srednia", "Bardzo dobra")))
P1=matrix(c(12,5,0,32,40,26,10,21,54),
nrow = 3,
dimnames = list("Badanie1" = c("Slaba", "Srednia", "Bardzo dobra"),
"Badanie2" = c("Slaba", "Srednia", "Bardzo dobra")))
P1
matrix(c(5,2,1,0,0,0,
6,3,2,2,0,0), 2, 6, byrow = T)
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2, byrow = T)
matrix(c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2), 2, 6, byrow = T)
0,10,15,18,5,2,
matrix(c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2), 2, 6, byrow = T)
matrix(c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2), 6, 6, byrow = T)
matrix(c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2), 7, 6, byrow = T)
6
,
matrix(c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2), 6, 6, byrow = T)
matrix(c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2), 6, 6, byrow = T)
dimnames(data) <- list(
Wyniki_z_kolokwium_1 = c("F", "T"),
Wyniki_z_kolokwium_2 = c("F", "T")
)
dimnames(data) <- list(
Wyniki_z_kolokwium_1 = c("F", "T"),
Wyniki_z_kolokwium_2 = c("F", "T")
)
dimnames(data) <- list(
Wyniki_z_kolokwium_1 = c("2", "3","+3","4","+4","5"),
Wyniki_z_kolokwium_2 = c("2", "3","+3","4","+4","5")
)
dimnames(data) <- list(
Wyniki_z_kolokwium_1 = c("2", "3","+3","4","+4","5"),
Wyniki_z_kolokwium_2 = c("2", "3","+3","4","+4","5")
)
data <- matrix(c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2), 6, 6, byrow = T)
dimnames(data) <- list(
Wyniki_z_kolokwium_1 = c("2", "3","+3","4","+4","5"),
Wyniki_z_kolokwium_2 = c("2", "3","+3","4","+4","5")
)
data
dimnames(data) <- list(
Wyniki_z_kolokwium_2 = c("2", "3","+3","4","+4","5"),
Wyniki_z_kolokwium_1 = c("2", "3","+3","4","+4","5")
)
data
mcnemar.test(data, correct=TRUE)
mcnemar.test(data, correct=FALSE)
data <- matrix(c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2), 6, 6, byrow = T)
data
<-
count <- c(12,32,10,5,40,21,0,26,54)
Badanie1<-gl(3,3,labels=c("Slaba", "Srednia", "Bardzo dobra")) ´
library("gnm")
count <- c(12,32,10,5,40,21,0,26,54)
Badanie1<-gl(3,3,labels=c("Slaba", "Srednia", "Bardzo dobra")) ´
Badanie1<-glm(3,3,labels=c("Slaba", "Srednia", "Bardzo dobra")) ´
Badanie1<-gl(3,3,labels=c("Slaba", "Srednia", "Bardzo dobra")) ´
Badanie2<-gl(3,1,labels=c("Slaba", "Srednia", "Bardzo dobra")) ´
library("gnm")
Badanie1<-gl(3,3,labels=c("Slaba", "Srednia", "Bardzo dobra"))
Badanie2<-gl(3,1,labels=c("Slaba", "Srednia", "Bardzo dobra"))
DaneP1 <- data.frame(Badanie1,Badanie2,count)
DaneP1
count <- c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2)
Badanie1<-gl(3,3,labels=c("2", "3","+3","4","+4","5"))
count <- c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2)
Badanie1<-gl(3,3,labels=c("2", "3","+3","4","+4","5"))
Badanie2<-gl(3,1,labels=c("2", "3","+3","4","+4","5"))
DaneP1 <- data.frame(Badanie1,Badanie2,count)
DaneP1
count <- c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2)
Badanie1<-gl(3,3,labels=c("2", "3","+3","4","+4","5"))
Badanie2<-gl(3,1,labels=c("2", "3","+3","4","+4","5"))
DaneP1 <- data.frame(Badanie1,Badanie2,count)
DaneP1
data <- matrix(c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2), 6, 6, byrow = T)
dimnames(data) <- list(
Wyniki_z_kolokwium_2 = c("2", "3","+3","4","+4","5"),
Wyniki_z_kolokwium_1 = c("2", "3","+3","4","+4","5")
)
data
Badanie1<-gl(6,6,labels=c("2", "3","+3","4","+4","5"))
Badanie2<-gl(6,1,labels=c("2", "3","+3","4","+4","5"))
DaneP1 <- data.frame(Badanie1,Badanie2,count)
DaneP1
Badanie2<-gl(7,1,labels=c("2", "3","+3","4","+4","5"))
DaneP1 <- data.frame(Badanie1,Badanie2,count)
DaneP1
6
6
count <- c(5, 2, 1, 0,0,0,
6, 3, 2, 2,0,0,
1, 4, 5, 5,2,2,
0,10,15,18,5,2,
1, 2, 5, 3,2,2,
0, 1, 3, 4,3,2)
Badanie1<-gl(6,6,labels=c("2", "3","+3","4","+4","5"))
Badanie2<-gl(6,1,labels=c("2", "3","+3","4","+4","5"))
DaneP1 <- data.frame(Badanie1,Badanie2,count)
DaneP1
symmetry <- glm(count ~ Symm(Badanie1, Badanie2), data=DaneP1, family = poisson)
summary(symmetry)
x <- symmetry$deviance
x
x <- symmetry$deviance
x
r<-35
p <- 1 - pchisq(x, r)
p
####zad1b
quasi.symm <- glm(count ~ Badanie1+Badanie2 + Symm(Badanie1,Badanie2),data=DaneP1, family =poisson)
summary(quasi.symm)
DaneP1
library(gnm)
symmetry <- glm(count ~ Symm(Badanie1, Badanie2), data=DaneP1, family = poisson)
summary(symmetry)
summary(symmetry)$"Resid. Dev"
summary(symmetry)$"Residual deviance"
x <- symmetry$df
x
deviance
summary(symmetry)$"Residual deviance"
summary(symmetry)$"df"
summary(symmetry)$"df"[1]
summary(symmetry)$"df"[2]
r<-summary(symmetry)$"df"[2]
####zad1b
quasi.symm <- glm(count ~ Badanie1+Badanie2 + Symm(Badanie1,Badanie2),data=DaneP1, family =poisson)
summary(quasi.symm)
x=quasi.symm$deviance
r <- summary(quasi.symm)$"df"[2]
r
p=1-pchisq(x,r)
p
p <- 1 - pchisq(x, r)
p
x = quasi.symm$deviance
x
x
####zad1b
quasi.symm <- glm(count ~ Badanie1 + Badanie2 + Symm(Badanie1,Badanie2),data=DaneP1, family =poisson)
####zad1b
quasi.symm <- glm(count ~ Badanie1 + Badanie2 + Symm(Badanie1,Badanie2),data=DaneP1, family =poisson)
summary(quasi.symm)
x = quasi.symm$deviance
x
symmetry <- glm(count ~ Symm(Badanie1, Badanie2), data=DaneP1, family = poisson)
summary(symmetry)$"df"[2]
x <- symmetry$deviance
x
r<-summary(symmetry)$"df"[2]
p <- 1 - pchisq(x, r)
p
####zad1b
quasi.symm <- glm(count ~ Badanie1 + Badanie2 + Symm(Badanie1,Badanie2),data=DaneP1, family =poisson)
summary(quasi.symm)
x = quasi.symm$deviance
x
r <- summary(quasi.symm)$"df"[2]
r
p=1-pchisq(x,r)
p
##########zad1c
quasi.indep <- glm(count ~ Badanie1 + Badanie2 + Diag(Badanie1, Badanie2),data=DaneP1, family = poisson)
summary(quasi.indep)
r <- summary(quasi.indep)$"df"[2]
r
summary(quasi.indep)
x<-quasi.indep$deviance
x<-quasi.indep$deviance
x
r <- summary(quasi.indep)$"df"[2]
r
p<-1-pchisq(x,r)
p
#zad2???????????????
comparison <- anova(symmetry, quasi.symm)
comparison
p=1-pchisq(33.466,2)
p <- 1-pchisq(33.466,2)
p
comparison$Df
comparison$Deviance
comparison$Deviance
comparison$Deviance[1]
comparison$Deviance[2]
p <- 1-pchisq(comparison$Deviance[2], comparison$Df)
p
p
comparison$Deviance[2]
comparison$Df
p <- 1-pchisq(comparison$Deviance[2], comparison$Df[2])
p
